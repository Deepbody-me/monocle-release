% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/assign_cell_states.R
\name{setStates}
\alias{setStates}
\title{Assign a state for each cell.}
\usage{
setStates(cds, minimal_branch_len = 10)
}
\arguments{
\item{cds}{the CellDataSet upon which to perform this operation}

\item{minimal_branch_len}{the minimal length of the principal tree segment to be treated as a true branch. Default to be 10.}
}
\value{
an updated CellDataSet object, in which phenoData contains values for State and Pseudotime for each cell
}
\description{
This function first decomposes the learned principal graph for the data into separate graph components. 
It then applies depth first traversal (DFS) for each graph component sequentially and assigns each principal point 
a State number. The State number increases every time we find a node has degree larger than 2 or when we 
move to the next graph component. Thus the state assignment are more meaningful if we run learnGraph with 
DDRTree, SimplePPT (and without loop clousre by setting close_loop = T) but not with L1graph. The cells inherit
the corresponding principal points' state (pseudotime, see below) value. The first cell 
with degree equal to 2 (the first cell if there is no cells has degree equal to 2) identified is used as the 
root cell. Note that this function also assigns pseudotime by default. But the orderCells function should be 
used in order to obtain correct ordering of the developmental trajectory under study. 

in order to remove small branch, this is what I did:
build a graph for the state graph mentioned above where each node corresponds to a state with an attribute of the 
node `size` corresponds to number of cells in that state and the edge corresponds to the vertex connecting two states.
then we do a DFS again to assign the `final state` for each cell, if the size attribute of the node is large than a 
threshold (like 10 principal points or so), we will increase the `final state` assignment for all the cells corresponds
to the `original state` , otherwise the `final state` of inherits the state  from the previous’s node’s `final state` in the `state graph`
}
\examples{
\dontrun{
lung <- load_lung()
lung <- assign_cell_states(lung)
}
}
